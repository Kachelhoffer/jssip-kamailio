#!KAMAILIO

#!define WITH_AUTH
#!define WITH_USRLOCDB
#!define WITH_TLS
#!define WITH_WEBSOCKETS

#!substdef "!MY_IP_ADDR!your_server_ip!g"
#!substdef "!MY_DOMAIN!your-sip-domain.com!g"

#!include_file "kamailio-local.cfg"

listen=udp:MY_IP_ADDR:5060
listen=tcp:MY_IP_ADDR:5060
listen=tls:MY_IP_ADDR:5061
listen=ws:MY_IP_ADDR:8080
listen=wss:MY_IP_ADDR:8443

alias="sip.MY_DOMAIN"

use_domain=1

# WebSocket and WebRTC support
loadmodule "websocket.so"
loadmodule "xhttp.so"
loadmodule "rtpengine.so"

# SIP message handling
route {
    # WebSocket connection handling
    if (is_method("GET")) {
        if ($hdr(Upgrade)=~"websocket"i) {
            xhttp_reply("101", "Switching Protocols");
            exit;
        }
        xhttp_reply("404", "Not Found");
        exit;
    }

    # WebSocket and WebRTC handling
    if (proto == WS || proto == WSS) {
        if (!t_check_trans()) {
            # Handle new WebSocket connection
            if (is_method("REGISTER")) {
                save("location");
            }
            exit;
        }
    }

    # RTP relay for WebRTC
    if (is_method("INVITE") && has_totag()) {
        rtpengine_offer();
    }
    if (is_method("ACK") && has_totag()) {
        rtpengine_answer();
    }

    # Standard SIP processing
    if (!is_method("REGISTER")) {
        if (!lookup("location")) {
            sl_send_reply("404", "Not Found");
            exit;
        }
    }

    if (!t_relay()) {
        sl_reply_error();
    }
}